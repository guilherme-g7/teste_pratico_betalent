// Mocks generated by Mockito 5.4.5 from annotations
// in teste_pratico_betalent/test/data/repositories/employees_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:teste_pratico_betalent/data/services/employees_service.dart'
    as _i3;
import 'package:teste_pratico_betalent/domain/models/employees_model.dart'
    as _i7;
import 'package:teste_pratico_betalent/utils/result.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EmployeesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmployeesService extends _i1.Mock implements _i3.EmployeesService {
  MockEmployeesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get host =>
      (super.noSuchMethod(
            Invocation.getter(#host),
            returnValue: _i4.dummyValue<String>(this, Invocation.getter(#host)),
          )
          as String);

  @override
  int get port =>
      (super.noSuchMethod(Invocation.getter(#port), returnValue: 0) as int);

  @override
  _i2.Dio Function() get clientFactory =>
      (super.noSuchMethod(
            Invocation.getter(#clientFactory),
            returnValue:
                () => _FakeDio_0(this, Invocation.getter(#clientFactory)),
          )
          as _i2.Dio Function());

  @override
  set clientFactory(_i2.Dio Function()? _clientFactory) => super.noSuchMethod(
    Invocation.setter(#clientFactory, _clientFactory),
    returnValueForMissingStub: null,
  );

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  _i5.Future<_i6.Result<List<_i7.EmployeesModel>>> getEmployess() =>
      (super.noSuchMethod(
            Invocation.method(#getEmployess, []),
            returnValue: _i5.Future<_i6.Result<List<_i7.EmployeesModel>>>.value(
              _i4.dummyValue<_i6.Result<List<_i7.EmployeesModel>>>(
                this,
                Invocation.method(#getEmployess, []),
              ),
            ),
          )
          as _i5.Future<_i6.Result<List<_i7.EmployeesModel>>>);
}
